export layout

# Note: While this code may seem long and intimidating, don't worry about it:
# it is just optimizing a layout of information (table and figures) and can be
# 100% generated by LLMs (Claude is a good one for this).
# Just copy paste it into your LLM and ask what you want, explaining what are the
# arguments.

function layout(menu_var, menu_iter, menu_m, menu_season, loaded_data, maps)
    DOM.div(
            style="display: grid; grid-template-columns: 300px 380px 1fr; gap: 20px; width: 100%;",
            # Left column
            DOM.div(
                    style="display: flex; flex-direction: column; gap: 20px;",
                    #                           Card(
                    #                                title="Calibration Set Selection",
                    #                                DOM.div(
                    #                                        style="display: flex; flex-direction: column; gap: 15px; padding: 10px;",
                    #                                        DOM.div("Select Set", menu_calibration),
                    #                                        DOM.div(load_button)
                    #                                       )
                    #                               ),
                    Card(
                         title="Parameters",
                         DOM.div(
                                 style="display: flex; flex-direction: column; gap: 15px; padding: 10px;",
                                 DOM.div("Variable", menu_var),
                                 DOM.div("Iteration", menu_iter),
                                 DOM.div("Ensemble", menu_m),
                                 DOM.div("Season", menu_season)
                                )
                        ),
                    Card(
                         title="Error Metrics",
                         DOM.div(
                                 style="display: flex; flex-direction: column; gap: 15px; padding: 10px;",
                                 @lift(begin
                                           if !haskey(loaded_data, "errors")
                                               return DOM.div("Load data to see error metrics")
                                           end

                                           errors = loaded_data["errors"]
                                           normalized_errors = loaded_data["normalized_errors"]
                                           current_iter = $(menu_iter.value)

                                           if current_iter == 0
                                               return DOM.div("No iteration selected")
                                           end

                                           DOM.div(
                                                   style="display: flex; flex-direction: column; gap: 5px;",
                                                   DOM.div(
                                                           style="display: grid; grid-template-columns: 0.8fr 1.1fr 1.1fr; border-bottom: 1px solid #999; padding-bottom: 5px; font-weight: bold;",
                                                           DOM.span("Iteration"),
                                                           DOM.span("Absolute"),
                                                           DOM.span("Normalized (%)")
                                                          ),
                                                   [DOM.div(
                                                            style=string(
                                                                         "display: grid; grid-template-columns: 0.8fr 1.1fr 1.1fr; ",
                                                                         "padding: 5px; border-bottom: 1px solid #eee; ",
                                                                         i == current_iter ? "background-color: #f0f8ff; font-weight: bold;" : ""
                                                                        ),
                                                            DOM.span("$(i)"),
                                                            DOM.span(string(round(errors[i]/1e6, digits=2), " × 10⁶")),
                                                            DOM.div(
                                                                    style=string(
                                                                                 "display: flex; align-items: center; ",
                                                                                 "color: ", i > 1 && normalized_errors[i] < normalized_errors[i-1] ? "green" : "inherit"
                                                                                ),
                                                                    DOM.span(round(normalized_errors[i], digits=1)),
                                                                    i > 1 ? DOM.span(
                                                                                     style=string(
                                                                                                  "margin-left: 5px; font-size: 0.8em; ",
                                                                                                  "color: ", normalized_errors[i] < normalized_errors[i-1] ? "green" : "red"
                                                                                                 ),
                                                                                     normalized_errors[i] < normalized_errors[i-1] ? "↓" : "↑"
                                                                                    ) : DOM.span("")
                                                                   )
                                                           ) for i in 1:length(errors)]
                                                  )
                                       end)
                                )
                        )
                   ),

            # Middle column
            DOM.div(
                    style="display: flex; flex-direction: column; gap: 20px;",
                    Card(
                         title="Parameter Values",
                         DOM.div(
                                 style="display: flex; flex-direction: column; gap: 10px; padding: 10px;",
                                 @lift(begin
                                           if !haskey(loaded_data, "param_dict")
                                               return DOM.div("Load data to see parameter values")
                                           end

                                           param_dict = loaded_data["param_dict"]
                                           params_name = loaded_data["params_name"]

                                           current_iter = $(menu_iter.value)
                                           current_m = $(menu_m.value)

                                           if current_iter == 0 || current_m == 0
                                               return DOM.div("No iteration or ensemble selected")
                                           end

                                           if !haskey(param_dict, current_iter) || length(param_dict[current_iter]) < current_m
                                               return DOM.div("Parameter data not available for this iteration/ensemble")
                                           end

                                           param_values = param_dict[current_iter][current_m]
                                           # For relative values, compare with initial parameters
                                           params_initial = param_dict[1][1]
                                           relative_values = param_values ./ params_initial

                                           DOM.div(
                                                   style="display: flex; flex-direction: column; gap: 5px;",
                                                   DOM.div(
                                                           style="display: grid; grid-template-columns: 1.2fr 1fr 1fr; border-bottom: 1px solid #999; padding-bottom: 5px; font-weight: bold;",
                                                           DOM.span("Parameter"),
                                                           DOM.span("Value"),
                                                           DOM.span("Relative")
                                                          ),
                                                   [DOM.div(
                                                            style="display: grid; grid-template-columns: 1.2fr 1fr 1fr; padding: 5px; border-bottom: 1px solid #eee;",
                                                            DOM.span(style="font-weight: bold;", params_name[i]),
                                                            DOM.span(
                                                                     # Format based on magnitude
                                                                     let val = param_values[i]
                                                                         if abs(val) < 0.001 && val != 0
                                                                             @sprintf("%.3e", val)  # Scientific for very small numbers
                                                                         elseif abs(val) > 10000
                                                                             @sprintf("%.3e", val)  # Scientific for very large numbers
                                                                         else
                                                                             @sprintf("%.4g", val)  # General format with 4 significant digits
                                                                         end
                                                                     end
                                                                    ),
                                                            DOM.div(
                                                                    style=string(
                                                                                 "display: flex; align-items: center; ",
                                                                                 "color: ", relative_values[i] > 1 ? "green" : (relative_values[i] < 1 ? "red" : "black")
                                                                                ),
                                                                    DOM.span(@sprintf("%.2f", relative_values[i])),  # Always 2 decimal places
                                                                    DOM.span(
                                                                             style="margin-left: 5px; font-size: 0.8em;",
                                                                             relative_values[i] > 1 ? "↑" : (relative_values[i] < 1 ? "↓" : "")
                                                                            )
                                                                   )
                                                           ) for i in 1:length(params_name)]
                                                  )
                                       end)
                                )
                        ),
                    Card(
                         title="RMSE Metrics",
                         DOM.div(
                                 style="display: flex; flex-direction: column; gap: 15px; padding: 10px;",
                                 @lift(begin
                                           if !haskey(loaded_data, "g_all")
                                               return DOM.div("Load data to see RMSE metrics")
                                           end

                                           g_all = loaded_data["g_all"]
                                           y_all = loaded_data["y_all"]
                                           g_data = loaded_data["g_data"]
                                           y_data = loaded_data["y_data"]
                                           rmse_benchmarks = loaded_data["rmse_benchmarks"]

                                           current_iter = $(menu_iter.value)
                                           current_var = $(menu_var.value)
                                           current_m = $(menu_m.value)

                                           if current_iter == 0 || current_var == "" || current_m == 0
                                               return DOM.div("No iteration, variable, or ensemble selected")
                                           end

                                           rmse_clm_value = rmse_benchmarks[current_var]

                                           DOM.div(
                                                   style="display: flex; flex-direction: column; gap: 15px;",
                                                   # Section headers
                                                   DOM.div(
                                                           style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;",
                                                           DOM.h4(style="margin: 0; color: #333; grid-column: 1;", "Overall RMSE"),
                                                           DOM.h4(style="margin: 0; color: #333; grid-column: 2;", "$(current_var) RMSE (LSMs: $(rmse_clm_value) W m⁻²)")
                                                          ),
                                                   # Table headers
                                                   DOM.div(
                                                           style="display: grid; grid-template-columns: 0.4fr 0.6fr 0.4fr 0.6fr; gap: 15px; border-bottom: 1px solid #999; padding-bottom: 5px; font-weight: bold;",
                                                           DOM.span("Iter."),
                                                           DOM.span("RMSE (W m⁻²)"),
                                                           DOM.span("Iter."),
                                                           DOM.span("RMSE (W m⁻²)")
                                                          ),
                                                   # Table rows
                                                   [DOM.div(
                                                            style="display: grid; grid-template-columns: 0.4fr 0.6fr 0.4fr 0.6fr; gap: 15px; padding: 5px; border-bottom: 1px solid #eee;",
                                                            # Overall RMSE column
                                                            DOM.span(
                                                                     style=i == current_iter ? "font-weight: bold;" : "",
                                                                     "$(i)"
                                                                    ),
                                                            DOM.div(
                                                                    style=string(
                                                                                 "display: flex; align-items: center; ",
                                                                                 i == current_iter ? "font-weight: bold;" : "",
                                                                                 "color: ", i > 1 && RMSE(g_all[i][:,1], y_all[i]) < RMSE(g_all[i-1][:,1], y_all[i-1]) ? "green" : "inherit"
                                                                                ),
                                                                    DOM.span(@sprintf("%.3f", RMSE(g_all[i][:,1], y_all[i]))),
                                                                    i > 1 ? DOM.span(
                                                                                     style=string(
                                                                                                  "margin-left: 5px; font-size: 0.8em; ",
                                                                                                  "color: ", RMSE(g_all[i][:,1], y_all[i]) < RMSE(g_all[i-1][:,1], y_all[i-1]) ? "green" : "red"
                                                                                                 ),
                                                                                     RMSE(g_all[i][:,1], y_all[i]) < RMSE(g_all[i-1][:,1], y_all[i-1]) ? "↓" : "↑"
                                                                                    ) : DOM.span("")
                                                                   ),
                                                            # Variable RMSE column
                                                            DOM.span(
                                                                     style=i == current_iter ? "font-weight: bold;" : "",
                                                                     "$(i)"
                                                                    ),
                                                            DOM.div(
                                                                    style=string(
                                                                                 "display: flex; align-items: center; ",
                                                                                 i == current_iter ? "font-weight: bold;" : "",
                                                                                 "color: ", RMSE(g_data[i][current_m][current_var], y_data[i][current_var]) < rmse_clm_value ? "green" : "red"
                                                                                ),
                                                                    DOM.span(@sprintf("%.3f", RMSE(g_data[i][current_m][current_var], y_data[i][current_var]))),
                                                                    DOM.span(
                                                                             style="margin-left: 5px; font-size: 0.8em;",
                                                                             i > 1 && RMSE(g_data[i][current_m][current_var], y_data[i][current_var]) <
                                                                             RMSE(g_data[i-1][current_m][current_var], y_data[i-1][current_var]) ? "↓" :
                                                                             (i > 1 ? "↑" : "")
                                                                            )
                                                                   )
                                                           ) for i in 1:length(g_all)]
                                                  )
                                       end)
                                )
                        )
                   ),

            # Right column (maps)
            maps
           )
end
